{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nvar _jsxFileName = \"C:\\\\Users\\\\awood\\\\OneDrive\\\\Desktop\\\\React\\\\NextJs Project One\\\\pages\\\\[meetupId]\\\\index.js\";\nimport MeetUpDetail from \"../../components/meetups/MeetupDetail\"; //strucutured it like this with the sep comp because we want the css styles and reactjs props\n//passed via props\n\nfunction MeetupDetails(props) {\n  return /*#__PURE__*/_jsxDEV(MeetUpDetail, {\n    image: props.meetupData.image,\n    title: props.meetupData.title,\n    address: props.meetupData.address,\n    description: props.meetupData.description\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 9,\n    columnNumber: 5\n  }, this);\n} //getStaticPaths is for prepage rendering for dynamic pages via params\n\n\n_c = MeetupDetails;\nexport var __N_SSG = true;\nexport default MeetupDetails;\n\nvar _c;\n\n$RefreshReg$(_c, \"MeetupDetails\");","map":{"version":3,"sources":["C:/Users/awood/OneDrive/Desktop/React/NextJs Project One/pages/[meetupId]/index.js"],"names":["MeetUpDetail","MeetupDetails","props","meetupData","image","title","address","description"],"mappings":";;AAEA,OAAOA,YAAP,MAAyB,uCAAzB,C,CACA;AACA;;AAEA,SAASC,aAAT,CAAuBC,KAAvB,EAA8B;AAC5B,sBACE,QAAC,YAAD;AACE,IAAA,KAAK,EAAEA,KAAK,CAACC,UAAN,CAAiBC,KAD1B;AAEE,IAAA,KAAK,EAAEF,KAAK,CAACC,UAAN,CAAiBE,KAF1B;AAGE,IAAA,OAAO,EAAEH,KAAK,CAACC,UAAN,CAAiBG,OAH5B;AAIE,IAAA,WAAW,EAAEJ,KAAK,CAACC,UAAN,CAAiBI;AAJhC;AAAA;AAAA;AAAA;AAAA,UADF;AAQD,C,CAED;;;KAXSN,a;;AAkET,eAAeA,aAAf","sourcesContent":["import { MongoClient, ObjectId } from \"mongodb\";\r\n\r\nimport MeetUpDetail from \"../../components/meetups/MeetupDetail\";\r\n//strucutured it like this with the sep comp because we want the css styles and reactjs props\r\n//passed via props\r\n\r\nfunction MeetupDetails(props) {\r\n  return (\r\n    <MeetUpDetail\r\n      image={props.meetupData.image}\r\n      title={props.meetupData.title}\r\n      address={props.meetupData.address}\r\n      description={props.meetupData.description}\r\n    />\r\n  );\r\n}\r\n\r\n//getStaticPaths is for prepage rendering for dynamic pages via params\r\nexport async function getStaticPaths() {\r\n  //Fetch Data from an API\r\n  const client = await MongoClient.connect(\r\n    `mongodb+srv://12345:12345@cluster0.dizvn9k.mongodb.net/meetups?retryWrites=true&w=majority`\r\n  );\r\n  const db = client.db();\r\n  //nosql collections are kind of like sql tables but are documents with JSON data\r\n  const meetupsCollection = db.collection(\"meetups\");\r\n\r\n  //first arg are all the collection objects we want to find in this db\r\n  //second arg in find is what field we want to extract from the collection i.e the id field for this dynamic page\r\n  const meetups = await meetupsCollection.find({}, { _id: 1 }).toArray();\r\n\r\n  client.close();\r\n\r\n  //fallback allows us to pregenerate some of our pages for specific id values\r\n  //array of objects of the path and params objs we want and their id keys\r\n  return {\r\n    fallback: false,\r\n    //dynamically render the path with the db API data id keys\r\n    paths: meetups.map((meetup) => ({\r\n      params: { meetupId: meetup._id.toString() },\r\n    })),\r\n  };\r\n}\r\n\r\n//get static props is for rendering the specified data for each id value and it's props\r\nexport async function getStaticProps(context) {\r\n  // Fetch data for a single meetup\r\n\r\n  //concrete meetup id for the meetup(s) we render through a context key obj passes as our url param i.e \"m1\"\r\n  const meetupId = context.params.meetupId;\r\n\r\n  //Fetch Data from an API\r\n  const client = await MongoClient.connect(\r\n    `mongodb+srv://12345:12345@cluster0.dizvn9k.mongodb.net/meetups?retryWrites=true&w=majority`\r\n  );\r\n  const db = client.db();\r\n  //nosql collections are kind of like sql tables but are documents with JSON data\r\n  const meetupsCollection = db.collection(\"meetups\");\r\n\r\n  const selectedMeetup = await meetupsCollection.findOne({\r\n    _id: ObjectId(meetupId),\r\n  });\r\n\r\n  client.close();\r\n\r\n  return {\r\n    props: {\r\n      meetupData: selectedMeetup,\r\n    },\r\n  };\r\n}\r\n\r\nexport default MeetupDetails;\r\n"]},"metadata":{},"sourceType":"module"}